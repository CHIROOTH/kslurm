from __future__ import absolute_import

from signal import Signals
from types import TracebackType
from typing import Any, Callable, ContextManager, TypeVar

from typing_extensions import ParamSpec, Self

from .base_spinner import Spinner as Spinner
from .base_spinner import default_spinner as default_spinner
from .constants import Attr, Color, OnColor, Side
from .signal_handlers import SignalHandler

P = ParamSpec("P")
T = TypeVar("T")

class Yaspin:
    def __init__(
        self,
        spinner: Spinner | str | None = ...,
        text: str = ...,
        color: Color | None = ...,
        on_color: OnColor | None = ...,
        attrs: list[Attr] | None = ...,
        reversal: bool = ...,
        side: str = ...,
        sigmap: dict[Signals, SignalHandler] | None = ...,
        timer: bool = ...,
    ) -> None: ...
    def __enter__(self) -> Self: ...
    def __exit__(
        self,
        exc_type: type[BaseException] | None,
        exc_val: BaseException | None,
        traceback: TracebackType | None,
    ) -> bool: ...
    def __call__(self, fn: Callable[P, T]) -> Callable[P, T]: ...
    def __getattr__(self, name: str) -> Any: ...
    @property
    def spinner(self) -> Spinner: ...
    @spinner.setter
    def spinner(self, sp: Spinner) -> None: ...
    @property
    def text(self) -> str: ...
    @text.setter
    def text(self, txt: str) -> None: ...
    @property
    def color(self) -> Color: ...
    @color.setter
    def color(self, value: Color) -> None: ...
    @property
    def on_color(self) -> OnColor: ...
    @on_color.setter
    def on_color(self, value: OnColor) -> None: ...
    @property
    def attrs(self) -> list[Attr]: ...
    @attrs.setter
    def attrs(self, value: list[Attr]) -> None: ...
    @property
    def side(self) -> Side: ...
    @side.setter
    def side(self, value: Side) -> None: ...
    @property
    def reversal(self) -> bool: ...
    @reversal.setter
    def reversal(self, value: bool) -> None: ...
    @property
    def elapsed_time(self) -> float: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def hide(self) -> None: ...
    def hidden(self) -> ContextManager[None]: ...
    def show(self) -> None: ...
    def write(self, text: Any) -> None: ...
    def ok(self, text: str = ...) -> None: ...
    def fail(self, text: str = ...) -> None: ...
    @staticmethod
    def is_jupyter() -> bool: ...
    @property
    def blink(self) -> Self: ...
    @property
    def bold(self) -> Self: ...
    @property
    def concealed(self) -> Self: ...
    @property
    def dark(self) -> Self: ...
    @property
    def reverse(self) -> Self: ...
    @property
    def underline(self) -> Self: ...
    @property
    def blue(self) -> Self: ...
    @property
    def cyan(self) -> Self: ...
    @property
    def green(self) -> Self: ...
    @property
    def magenta(self) -> Self: ...
    @property
    def red(self) -> Self: ...
    @property
    def white(self) -> Self: ...
    @property
    def yellow(self) -> Self: ...
    @property
    def on_blue(self) -> Self: ...
    @property
    def on_cyan(self) -> Self: ...
    @property
    def on_green(self) -> Self: ...
    @property
    def on_grey(self) -> Self: ...
    @property
    def on_magenta(self) -> Self: ...
    @property
    def on_red(self) -> Self: ...
    @property
    def on_white(self) -> Self: ...
    @property
    def on_yellow(self) -> Self: ...
    @property
    def aesthetic(self) -> Self: ...
    @property
    def arc(self) -> Self: ...
    @property
    def arrow(self) -> Self: ...
    @property
    def arrow2(self) -> Self: ...
    @property
    def arrow3(self) -> Self: ...
    @property
    def balloon(self) -> Self: ...
    @property
    def balloon2(self) -> Self: ...
    @property
    def betaWave(self) -> Self: ...
    @property
    def bluePulse(self) -> Self: ...
    @property
    def bounce(self) -> Self: ...
    @property
    def bouncingBall(self) -> Self: ...
    @property
    def bouncingBar(self) -> Self: ...
    @property
    def boxBounce(self) -> Self: ...
    @property
    def boxBounce2(self) -> Self: ...
    @property
    def christmas(self) -> Self: ...
    @property
    def circle(self) -> Self: ...
    @property
    def circleHalves(self) -> Self: ...
    @property
    def circleQuarters(self) -> Self: ...
    @property
    def clock(self) -> Self: ...
    @property
    def dots(self) -> Self: ...
    @property
    def dots10(self) -> Self: ...
    @property
    def dots11(self) -> Self: ...
    @property
    def dots12(self) -> Self: ...
    @property
    def dots13(self) -> Self: ...
    @property
    def dots2(self) -> Self: ...
    @property
    def dots3(self) -> Self: ...
    @property
    def dots4(self) -> Self: ...
    @property
    def dots5(self) -> Self: ...
    @property
    def dots6(self) -> Self: ...
    @property
    def dots7(self) -> Self: ...
    @property
    def dots8(self) -> Self: ...
    @property
    def dots8Bit(self) -> Self: ...
    @property
    def dots9(self) -> Self: ...
    @property
    def dqpb(self) -> Self: ...
    @property
    def earth(self) -> Self: ...
    @property
    def fingerDance(self) -> Self: ...
    @property
    def fistBump(self) -> Self: ...
    @property
    def flip(self) -> Self: ...
    @property
    def grenade(self) -> Self: ...
    @property
    def growHorizontal(self) -> Self: ...
    @property
    def growVertical(self) -> Self: ...
    @property
    def hamburger(self) -> Self: ...
    @property
    def hearts(self) -> Self: ...
    @property
    def layer(self) -> Self: ...
    @property
    def line(self) -> Self: ...
    @property
    def line2(self) -> Self: ...
    @property
    def material(self) -> Self: ...
    @property
    def mindblown(self) -> Self: ...
    @property
    def monkey(self) -> Self: ...
    @property
    def moon(self) -> Self: ...
    @property
    def noise(self) -> Self: ...
    @property
    def orangeBluePulse(self) -> Self: ...
    @property
    def orangePulse(self) -> Self: ...
    @property
    def pipe(self) -> Self: ...
    @property
    def point(self) -> Self: ...
    @property
    def pong(self) -> Self: ...
    @property
    def runner(self) -> Self: ...
    @property
    def sand(self) -> Self: ...
    @property
    def shark(self) -> Self: ...
    @property
    def simpleDots(self) -> Self: ...
    @property
    def simpleDotsScrolling(self) -> Self: ...
    @property
    def smiley(self) -> Self: ...
    @property
    def soccerHeader(self) -> Self: ...
    @property
    def speaker(self) -> Self: ...
    @property
    def squareCorners(self) -> Self: ...
    @property
    def squish(self) -> Self: ...
    @property
    def star(self) -> Self: ...
    @property
    def star2(self) -> Self: ...
    @property
    def timeTravel(self) -> Self: ...
    @property
    def toggle(self) -> Self: ...
    @property
    def toggle10(self) -> Self: ...
    @property
    def toggle11(self) -> Self: ...
    @property
    def toggle12(self) -> Self: ...
    @property
    def toggle13(self) -> Self: ...
    @property
    def toggle2(self) -> Self: ...
    @property
    def toggle3(self) -> Self: ...
    @property
    def toggle4(self) -> Self: ...
    @property
    def toggle5(self) -> Self: ...
    @property
    def toggle6(self) -> Self: ...
    @property
    def toggle7(self) -> Self: ...
    @property
    def toggle8(self) -> Self: ...
    @property
    def toggle9(self) -> Self: ...
    @property
    def triangle(self) -> Self: ...
    @property
    def weather(self) -> Self: ...
    @property
    def left(self) -> Self: ...
    @property
    def right(self) -> Self: ...
